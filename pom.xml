<!--
~   Licensed under the Apache License, Version 2.0 (the "License");
~   you may not use this file except in compliance with the License.
~   You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~   Unless required by applicable law or agreed to in writing, software
~   distributed under the License is distributed on an "AS IS" BASIS,
~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~   See the License for the specific language governing permissions and
~   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

<parents>
  <parent>
    <groupId>org.basepom</groupId>
    <artifactId>basepom-oss</artifactId>
    <version>33</version>
  </parent>
  <parent>
    <groupId> org.springframework.boot </groupId>
    <artifactId> spring-boot-starter-parent </artifactId>
    <version> 2.1.6.RELEASE </version>
  </parent>
</parents>




  <groupId>com.github.zregvart</groupId>
  <artifactId>camel-netty-proxy</artifactId>
  <version>0.0.1</version>

  <properties>
    <camel.version>3.6.0</camel.version>
    <fabric8.openshift.generateRoute>false</fabric8.openshift.generateRoute>
    <project.build.targetJdk>11</project.build.targetJdk>
  </properties>

  <dependencies>
    <!-- 추가 -->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.1</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <version>2.3.0.1</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>2.3.1</version>
    </dependency>

    <dependency>
      <groupId>com.sun.activation</groupId>
      <artifactId>javax.activation</artifactId>
      <version>1.2.0</version>
    </dependency>
    <!-- 추가 완료 -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-bean-starter</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-main</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core-engine</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-api</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-support</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
      <version>4.1.53.Final</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-netty-http</artifactId>
      <version>${camel.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.7.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.jqwik</groupId>
      <artifactId>jqwik</artifactId>
      <version>1.3.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.jqwik</groupId>
      <artifactId>jqwik-api</artifactId>
      <version>1.3.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.18.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ru.lanwen.wiremock</groupId>
      <artifactId>wiremock-junit5</artifactId>
      <version>1.3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>2.27.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>RELEASE</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <configuration>
          <ignoredResourcePatterns combine.children="append">
            <ignoredResourcePattern>component.properties</ignoredResourcePattern>
          </ignoredResourcePatterns>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*Properties.java</include>
            <include>**/*Test.java</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>container-build</id>
      <activation>
        <property>
          <name>target</name>
        </property>
      </activation>
      <build>
        <finalName>${target}</finalName>
      </build>
    </profile>
    <profile>
      <id>openshift</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <version>4.4.1</version>
            <executions>
              <execution>
                <goals>
                  <goal>resource</goal>
                  <goal>build</goal>
                  <goal>deploy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <enricher>
                <includes>
                  <include>fmp-openshift-autotls</include>
                </includes>
                <config>
                  <fmp-openshift-autotls>
                    <tlsSecretName>camel-netty-proxy-tls</tlsSecretName>
                    <tlsSecretVolumeName>camel-netty-proxy-tls-pem</tlsSecretVolumeName>
                    <jksVolumeName>camel-netty-proxy-tls-jks</jksVolumeName>
                  </fmp-openshift-autotls>
                </config>
              </enricher>
              <resources>
                <labels>
                  <service>
                    <property>
                      <name>discovery.3scale.net</name>
                      <value>true</value>
                    </property>
                  </service>
                </labels>
                <annotations>
                  <service>
                    <property>
                      <name>discovery.3scale.net/scheme</name>
                      <value>proxy</value>
                    </property>
                    <property>
                      <name>discovery.3scale.net/port</name>
                      <value>8443</value>
                    </property>
                    <property>
                      <name>service.beta.openshift.io/serving-cert-secret-name</name>
                      <value>camel-netty-proxy-tls</value>
                    </property>
                  </service>
                </annotations>
                <volumes>
                  <volume>
                    <name>camel-netty-proxy-tls-pem</name>
                    <type>secret</type>
                    <secretName>camel-netty-proxy-tls</secretName>
                  </volume>
                  <volume>
                    <name>camel-netty-proxy-tls-jks</name>
                    <type>emptyDir</type>
                    <medium>Memory</medium>
                    <mounts>/tls</mounts>
                  </volume>
                </volumes>
              </resources>
              <images>
                <image>
                  <name>${project.artifactId}:${project.version}</name>
                  <build>
                    <from>fabric8/s2i-java:latest-java11</from>
                    <ports>
                      <port>8443</port>
                    </ports>
                    <assembly>
                      <basedir>/deployments</basedir>
                      <descriptorRef>artifact-with-dependencies</descriptorRef>
                    </assembly>
                    <env>
                      <JAVA_LIB_DIR>/deployments</JAVA_LIB_DIR>
                      <JAVA_MAIN_CLASS>com.github.zregvart.cnp.ProxyApp</JAVA_MAIN_CLASS>
                    </env>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
